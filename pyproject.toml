[project]
name = "emlo-pytorch-session1"
version = "0.1.0"
description = "emlo pytorch lightning session-1"
authors = [
    {name = "Soutrik Chowdhury",email = "soutrik1991@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
"lightning>=2.5.0",
"loguru>=0.7.2",
"rich>=13.8.1",
"tensorboard==2.17.1",
"timm==1.0.9",
"torch>=2.5.0",
"torchvision>=0.20.0",
"gdown==5.2.0",
"kaggle (>=1.7.4.5,<2.0.0.0)",
]

[tool.poetry.group.dev.dependencies]
# Code formatting and linting
black = ">=24.8.0"
ruff = ">=0.1.0"
isort = ">=5.12.0"

# Testing
pytest = ">=7.4.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.11.0"
pytest-xdist = ">=3.3.0"

# Documentation
mkdocs = ">=1.5.0"
mkdocs-material = ">=9.4.0"
mkdocstrings = {extras = ["python"], version = ">=0.24.0"}
mkdocs-jupyter = ">=0.24.0"
mkdocs-git-revision-date-localized-plugin = ">=1.2.0"

# Type checking
mypy = ">=1.5.0"
types-requests = ">=2.31.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "lightning.*",
    "torchvision.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
